#*
#* Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#* SPDX-License-Identifier: MIT-0
#*
#* Permission is hereby granted, free of charge, to any person obtaining a copy of this
#* software and associated documentation files (the "Software"), to deal in the Software
#* without restriction, including without limitation the rights to use, copy, modify,
#* merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
#* permit persons to whom the Software is furnished to do so.
#*
#* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
#* INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
#* PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
#* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
#* SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#*

#------------------------------------------------------------------------------
#
# Template: 3_opsmgmt-chef-target-accounts.yaml
# Purpose:  AWS CloudFormation template to configure a target account for a scheduled multi-account and multi-region Automation for Chef recipe execution.
#
#
#------------------------------------------------------------------------------

AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation template to configure a target account with State Manager Associations and SSM Resource Sync for a scheduled multi-account and multi-region Automation for Chef recipe and RunInspec.
Metadata:
  'AWS::CloudFormation::Interface':
  #ParameterGroup is a property that defines a parameter group and the parameters to include in the group.
    ParameterGroups:
      - Label:
          default: General Configuration
        Parameters:
          - CentralAccountNumber
          - ExecutionLogsS3Bucket
          - InventoryExecutionLogsS3BucketPrefix
          - RunInspecExecutionLogsS3BucketPrefix
          - ChefRecipeAssocExecutionLogsS3BucketPrefix
          - ExistingAutomationExecutionRole
          - ChefManagedInstanceDataEncryptionKey
          - ResourceSyncS3Bucket
          - ResourceSyncS3BucketRegion
          - ResourceDataSyncName
      - Label:
          default: Chef Cookbook and Recipe Association Configuration
        Parameters:
          - ChefSourceType
          - ChefSourceInfo
          - ChefRunList
          - ChefJSONOptions
          - ChefClientVer
          - ChefClientArgs
          - ChefWhyRun
          - ChefComplianceSev
          - ChefComplianceType
          - ChefComplianceRepBucket
      - Label:
          default: Chef RunInspec Association Configuration
        Parameters:
          - RunInspecSourceType
          - RunInpecSourceInfo
    
    #ParameterLabel is a property that specifies a friendly name or description for a parameter that the AWS CloudFormation console shows instead of the parameter's logical ID.
    ParameterLabels:
      CentralAccountNumber:
        default: Central Account Number
      ExecutionLogsS3Bucket:
        default: Execution Logs S3 Bucket
      InventoryExecutionLogsS3BucketPrefix:
        default: Inventory Execution Logs S3 Bucket Prefix
      RunInspecExecutionLogsS3BucketPrefix:
        default: Run Inspec Execution Logs S3 Bucket Prefix
      ChefRecipeAssocExecutionLogsS3BucketPrefix:
        default: Chef Recipe Assoc Execution Logs S3 Bucket Prefix
      ExistingAutomationExecutionRole:
        default: ExistingAutomationExecutionRole
      ChefManagedInstanceDataEncryptionKey:
        default: ChefManagedInstanceDataEncryptionKey
      ResourceSyncS3Bucket:
        default: ResourceSyncS3Bucket
      ResourceSyncS3BucketRegion:
        default: ResourceSyncS3BucketRegion
      ResourceDataSyncName:
        default: ResourceDataSyncName
      ChefSourceType:
        default: Chef Source Type for Cookbook or Recipe Storage
      ChefSourceInfo:
        default: Chef Source Info for path to Cookbook or Recipe
      ChefRunList:
        default: Chef Recipe Run List from Cookbook selected
      ChefJSONOptions:
        default: Chef Recipe Attributes passed as JSON Options
      ChefClientVer:
        default: Chef Client Version
      ChefClientArgs:
        default: Chef Client Arguments or Options
      ChefWhyRun:
        default: Chef Why Run
      ChefComplianceSev:
        default: Chef Compliance Severity
      ChefComplianceType:
        default: Chef Compliance Type
      ChefComplianceRepBucket:
        default: Chef Compliance Report S3 Bucket
      RunInspecSourceType:
        default: RunInspecSourceType
      RunInpecSourceInfo:
        default: RunInpecSourceInfo

#-----------------------------------------------------------
# Parameters
#-----------------------------------------------------------
Parameters :

  CentralAccountNumber :
    Type : 'String'
    Description: 'Account number for the central account.'
    Default: ''
  ExecutionLogsS3Bucket :
    Type : 'String'
    Description: 'Name of the S3 bucket that lives in the central account.'
    Default: 'ssm-execution-logs-af-south-1-{CentralAWSAccountID}'
  InventoryExecutionLogsS3BucketPrefix :
    Type : 'String'
    Description: 'Name of the prefix to use in the central account S3 bucket for inventory execution data.'
    Default: 'inventory-execution-logs'
  RunInspecExecutionLogsS3BucketPrefix :
    Type : 'String'
    Description: 'Name of the prefix to use in the central account S3 bucket for RunInspec execution data.'
    Default: 'runinspec-execution-logs'
  ChefRecipeAssocExecutionLogsS3BucketPrefix :
    Type : 'String'
    Description: 'Name of the prefix to use in the central account S3 bucket for RunInspec execution data.'
    Default: 'runinspec-execution-logs'
  ExistingAutomationExecutionRole :
    Type : 'String'
    Description: '(Optional) The IAM role ARN of an Automation Execution role which has permissions to invoke patching Automation workflows and has a trust relationship with the central account.'
    Default: ''
  ChefManagedInstanceDataEncryptionKey:
    Type : 'String'
    Description: 'KMS Key used to encrypt S3 bucket.'
    Default: ''
  ResourceSyncS3Bucket :
    Type : 'String'
    Description: 'Name of the Resource Data Sync S3 bucket that lives in the central account.'
    Default: 'ssm-resource-sync-af-south-1-{CentralAWSAccountID}'
  ResourceSyncS3BucketRegion :
    Type : 'String'
    Description: 'Region where the Resource Data Sync S3 bucket is located.'
    Default: ''
  ResourceDataSyncName :
    Type : 'String'
    Description: 'Name for the Resource Data Sync.'
    Default: 'InventoryData'
  #-------------------------------------------------
  # Parameters for SSM AWS-ApplyChefRecipes Document required for State Manager Association
  #-------------------------------------------------
  ChefSourceType:
    Type: String
    Default: S3
    AllowedValues:
      - GitHub
      - S3
    Description: >-
      (Required) The source repository type for your Chef cookbooks.
  ChefSourceInfo:
    Type: String
    Default: '{"path":"https://aws-applychefrecipes-examples.s3.amazonaws.com/apply-chef-recipes-example-cookbook.tar.gz"}'
    Description: >-
      (Required) Information about the source repository, such as repository
      name, owner, branch if on GitHub, or path if Amazon S3. 
      If source type is GitHub, you can specify any of the following: 
      'owner', 'repository','path', 'getOptions', 'tokenInfo'. 
      If source type is S3, you can specify 'path'. 
      Example S3 parameters:
      {"path":"https://chef-repo-us-east-1-123456789012.s3.eu-west-1.amazonaws.com/ntp-3.12.0.tar.gz"}
      Example GitHub parameters (sample includes GitHub token passed in as SSM Parameter, replace with your own SSM Paramter when using a private repo):
      {"owner":"awslabs","repository":"amazon-ssm","path":"Compliance/InSpec/PortCheck","getOptions":"branch:master","tokenInfo": "{{ssm-secure:mySecureStringParameter}}"}.
  ChefRunList:
    Type: String
    Default: 'recipe[apply-chef-recipes-example-cookbook::default]'
    Description: >-
      (Required) The Chef recipes to apply. For example,
      recipe[cookbook_name1::recipe_name],recipe[cookbook_name2::recipe_name]
  ChefJSONOptions:
    Type: String
    Default: " "
    Description: >-
      (Optional) Attributes JSON to pass to the Chef client that applies your
      recipes.
  ChefClientVer:
    Type: String
    Default: '14'
    AllowedValues:
      - None
      - '11'
      - '12'
      - '13'
      - '14'
    Description: >-
      (Optional) The Chef client version to install on instances before recipes
      are applied. If None is specified, Systems Manager does not install the
      Chef client before applying your recipes.
  ChefClientArgs:
    Type: String
    Default: " "
    AllowedPattern: '^[^''";&\|><\*\?`\$\(\)\{\}\[\]!#\\]*$'
    Description: >-
      (Optional) Extra arguments to be passed to the Chef client that applies
      your recipes. For more information about available arguments, run
      chef-client -h from an instance that has the Chef client installed.
  ChefWhyRun:
    Type: String
    Default: 'False'
    AllowedValues:
      - 'True'
      - 'False'
    Description: >-
      (Optional) When set to true, enables why-run mode, which shows what will
      happen if the recipes are run, but does not modify target instances.
  ChefComplianceSev:
    Type: String
    Default: None
    AllowedValues:
      - None
      - Critical
      - High
      - Medium
      - Low
      - Informational
      - Unspecified
    Description: >-
      (Optional) The severity of drift between your Chef recipes and instance
      resources that is shown in Systems Manager compliance reports. To skip
      compliance reporting, specify None.
  ChefComplianceType:
    Type: String
    Default: 'Custom:Chef'
    AllowedPattern: '^$|^Custom\:[a-zA-Z0-9\-_\.]{1,93}$'
    Description: >-
      (Optional) The compliance type that you want reported in compliance results.
  ChefComplianceRepBucket:
    Type: String
    Default: 'chef-compliance-report-af-south-1-{CentralAWSAccountId}'
    Description: >-
      (Optional) Enter the name of the Chef compliance bucket created using 1_opsmgmt-chef-central-account.yaml. 
      The name of an existing Amazon S3 bucket in which to store details about every Chef run executed by this document, including resource configuration and compliance results.
#-------------------------------------------------
# Chef RunInspec parameters
#-------------------------------------------------
  RunInspecSourceType:
    Type: String
    Default: GitHub
    AllowedValues:
      - GitHub
      - S3
    Description: >-
      (Required) The source repository type for your Chef RunInspec profiles.
  RunInpecSourceInfo:
    Type: String
    Default: '{"owner":"awslabs","repository":"amazon-ssm","path":"Compliance/InSpec/PortCheck","getOptions":"branch:master"}'
    Description: >-
      (Required) Information about the source repository, such as repository
      name, owner, branch if on GitHub, or path if Amazon S3. 
      If source type is GitHub, you can specify any of the following: 
      'owner', 'repository','path', 'getOptions', 'tokenInfo'. 
      If source type is S3, you can specify 'path'. 
      Example S3 parameters:
      {"path":"https://chef-repo-us-east-1-123456789012.s3.eu-west-1.amazonaws.com/ntp-3.12.0.tar.gz"}
      Example GitHub parameters (sample includes GitHub token passed in as SSM Parameter Store value, replace with your own SSM Paramter when using a private repo):
      {"owner":"awslabs","repository":"amazon-ssm","path":"Compliance/InSpec/PortCheck","getOptions":"branch:master","tokenInfo": "{{ssm-secure:mySecureStringParameter}}"}.
   
Conditions:
  CreateAutomationExecutionRoleCondition:
    Fn::Equals:
    - Ref: ExistingAutomationExecutionRole
    - ''

Resources:

  #-------------------------------------------------
  # IAM role to enable multi-account/multi-region Automation
  #-------------------------------------------------
  AutomationExecutionServiceRole:
    Type: AWS::IAM::Role
    Condition: CreateAutomationExecutionRoleCondition
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ssm.amazonaws.com
            AWS: 
            - !Join [ '', ['arn:aws:iam::', !Ref 'CentralAccountNumber', ':root'] ]
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonSSMAutomationRole
      Path: "/"
      RoleName: AWS-SystemsManager-AutomationExecutionRole
      Policies:
      - PolicyName: passRole
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - iam:PassRole
            Resource: 
            - !Join [ '', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':role/AWS-SystemsManager-AutomationExecutionRole'] ]
      - PolicyName: getTagPermissions
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - tag:GetResources
            Resource: "*"
      - PolicyName: listResourceGroupResourcesPermissions
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - resource-groups:listGroupResources
            Resource: "*"
            
  #-------------------------------------------------
  # State Manager Association to gather Inventory data using AWS-GatherSoftwareInventory
  #-------------------------------------------------
  InventoryAssociation:
    Type: AWS::SSM::Association
    Properties:
      AssociationName: Inventory-Association
      Name: AWS-GatherSoftwareInventory
      ScheduleExpression: "rate(1 day)"
      OutputLocation:
        S3Location: 
          OutputS3BucketName: !Ref ExecutionLogsS3Bucket
          OutputS3KeyPrefix: !Join [ '', [!Ref InventoryExecutionLogsS3BucketPrefix, '/', 'accountid=', !Ref 'AWS::AccountId', '/', 'region=', !Ref 'AWS::Region'] ]
      Targets:
      - Key: InstanceIds
        Values:
        - "*"
      Parameters: 
        applications: 
          - "Enabled"
        awsComponents: 
          - "Enabled"
        files:
          - ""
        networkConfig: 
          - "Enabled"
        windowsUpdates: 
          - "Enabled"
        instanceDetailedInformation: 
          - "Enabled"
        services: 
          - "Enabled"
        windowsRegistry:
          - ""
        windowsRoles: 
          - "Enabled"
        customInventory:
          - "Enabled"
        billingInfo: 
          - "Enabled"

  #-------------------------------------------------
  # State Manager Association to gather Inventory data using AWS-RunInspecChecks
  #-------------------------------------------------
  ChefRunInspecAssociation:
    Type: AWS::SSM::Association
    Properties:
      AssociationName: RunInspecChecks-Association
      Name: AWS-RunInspecChecks
      ScheduleExpression: "rate(1 day)"
      OutputLocation:
        S3Location: 
          OutputS3BucketName: !Ref ExecutionLogsS3Bucket
          OutputS3KeyPrefix: !Join [ '', [!Ref RunInspecExecutionLogsS3BucketPrefix, '/', 'accountid=', !Ref 'AWS::AccountId', '/', 'region=', !Ref 'AWS::Region'] ]
      Targets:
      - Key: InstanceIds
        Values:
        - "*"
      Parameters: 
        sourceType: 
          - !Ref RunInspecSourceType
        sourceInfo: 
          - !Ref RunInpecSourceInfo

  #-------------------------------------------------
  # State Manager Association to gather Inventory data using AWS-AWSApplyChefRecipes
  #-------------------------------------------------
  ChefRecipeAssociation:
    Type: AWS::SSM::Association
    Properties:
      AssociationName: ApplyChefRecipes-Association
      Name: AWS-ApplyChefRecipes
      ScheduleExpression: "rate(1 day)"
      OutputLocation:
        S3Location: 
          OutputS3BucketName: !Ref ExecutionLogsS3Bucket
          OutputS3KeyPrefix: !Join [ '', [!Ref ChefRecipeAssocExecutionLogsS3BucketPrefix, '/', 'accountid=', !Ref 'AWS::AccountId', '/', 'region=', !Ref 'AWS::Region'] ]
      Targets:
      - Key: InstanceIds
        Values:
        - "*"
      Parameters: 
        SourceType: 
          - !Ref ChefSourceType
        SourceInfo: 
          - !Ref ChefSourceInfo
        RunList: 
          - !Ref ChefRunList
        JsonAttributesContent: 
          - !Ref ChefJSONOptions
        ChefClientVersion: 
          - !Ref ChefClientVer
        ChefClientArguments: 
          - !Ref ChefClientArgs
        WhyRun: 
          - !Ref ChefWhyRun
        ComplianceSeverity: 
          - !Ref ChefComplianceSev
        ComplianceType: 
          - !Ref ChefComplianceType
        ComplianceReportBucket: 
          - !Ref ChefComplianceRepBucket
        
  #-------------------------------------------------
  # Resource Data Sync to aggregate inventory, patching, and compliance data in the central S3 bucket
  #-------------------------------------------------
  ResourceDataSync:
    Type: AWS::SSM::ResourceDataSync
    Properties: 
      SyncName: !Ref ResourceDataSyncName
      S3Destination:
        BucketName: !Ref ResourceSyncS3Bucket
        BucketRegion: !Ref ResourceSyncS3BucketRegion
        KMSKeyArn: !Ref ChefManagedInstanceDataEncryptionKey
        SyncFormat: 'JsonSerDe'